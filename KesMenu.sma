/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta>
#include <fvault>

new const PLUGIN[] = "KesMenü";
new const VERSION[] = "1.0";
new const AUTHOR[] = "Supra:.";

new Kes[33], Pont[33];

new const Prefix[] = "[Sex~ +18]";
new const File[] = "KesMenu";

enum _:KesM { Name[32], Model[64], Cost[8] }

new const iGun[][KesM] =
{
	{ "Alap Kés", "models/v_knife.mdl", 0 },
	{ "Hagyma Kés", "models/sex_kes/v_hagyma.mdl", 5 },
	{ "Vonalzo Kés", "models/sex_kes/v_vonalzo.mdl", 15 },
	{ "Wolverine Kés", "models/sex_kes/v_wolverine.mdl", 30 },
	{ "Balrog Dragon Slayer Kés", "models/sex_kes/v_balrog_dragonslayer.mdl", 45 }
};

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR);
	
	/* Chat Parancsok */
	register_clcmd("say /kes", "KesMenu");
	register_clcmd("say /add", "Addolas");
	
	/* Event Reszek(Halal, Fegyver) */
	register_event("DeathMsg", "Halal", "a");
	register_event("CurWeapon", "FegyverValtas", "be", "1=1");
}
public Addolas(id)
{
	if(get_user_flags(id) & ADMIN_IMMUNITY)
		Pont[id] += 5;
}
public plugin_precache()
{
	for(new i;i < sizeof(iGun); i++)
		precache_model(iGun[i][Model]);
}
public FegyverValtas(id)
{
	for(new i;i < sizeof(iGun); i++)
	{
		if(Kes[id] == i && get_user_weapon(id) == CSW_KNIFE)
			set_pev(id, pev_viewmodel2, iGun[i][Model]);
	}
}
public Halal()
{
	new Gyilkos = read_data(1);
	new Aldozat = read_data(2);
	
	if(Gyilkos == Aldozat)
		return PLUGIN_HANDLED;
	
	if(get_user_weapon(Gyilkos) == CSW_KNIFE)
		Pont[Gyilkos] ++
		
	return PLUGIN_HANDLED;
}
public KesMenu(id)
{
	new cim[121], Num[8];
	format(cim, charsmax(cim), "\rSex~ +18 \d| \yKésMenü\r* \dPont: %d", Pont[id]);
	new menu = menu_create(cim, "Kes_h");
	
	for(new i;i < sizeof(iGun); i++)
	{
		num_to_str(i, Num, charsmax(Num));
		formatex(cim, charsmax(cim), Pont[id] >= iGun[i][Cost] ? "\r%s \d| \y[Megszerezve]\r*":"\r%s \d| \y[%d Pontért]\r*", iGun[i][Name], iGun[i][Cost]);
		menu_additem(menu, cim, Num);
	}
	menu_display(id, menu, 0);
}
public Kes_h(id, Menu, item)
{
	if(item == MENU_EXIT)
	{
		menu_destroy(Menu);
		return;
	}
	
	new Data[9], access, callback, szName[64];
	menu_item_getinfo(Menu, item, access, Data,charsmax(Data), szName,charsmax(szName), callback);
	new key = str_to_num(Data);
	
	if(Pont[id] >= iGun[key][Cost])
	{
		Kes[id] = key;
		client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad a !g%s !n-Skint.", Prefix, iGun[key][Name]);
	}
	else
	{
		client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
	}
}
stock client_printcolor(const id, const input[], any:...)
{
	new count = 1, players[32];
	static msg[191];
	vformat(msg, 190, input, 3);

	replace_all(msg, 190, "!g", "^4");
	replace_all(msg, 190, "!n", "^1");
	replace_all(msg, 190, "!t", "^3");  

	if (id) players[0] = id; else get_players(players, count, "ch");
	{
		for (new i = 0; i < count; i++)
		{
			if (is_user_connected(players[i]))
			{
				message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, players[i]);
				write_byte(players[i]);
				write_string(msg);
				message_end();
			}
		}
	}
	return PLUGIN_HANDLED;
}
public client_putinserver(id)
{
	if(!is_user_bot(id))
		Load(id);
}
public client_disconnect(id)
{
	if(!is_user_bot(id))
	{
		Save(id);
		Pont[id] = 0;
		Kes[id] = 0;
	}
}
Load(id)
{
	new Nev[32]; get_user_name(id, Nev, sizeof(Nev)-1);
	
	new Mentes[512];
	format(Mentes, charsmax(Mentes), "%i %i", Pont[id], Kes[id]);
	
	if(fvault_get_data(File, Nev, Mentes, charsmax(Mentes)))
	{
		new Ol[32], Cso[32]
		parse(Mentes, Ol, 31, Cso, 31);
		
		Pont[id] = str_to_num(Ol);
		Kes[id] = str_to_num(Cso);
	}
}
Save(id)
{
	new Nev[32]; get_user_name(id, Nev, sizeof(Nev)-1);
	
	new Mentes[512];
	format(Mentes, charsmax(Mentes), "%i %i", Pont[id], Kes[id]);
	
	fvault_set_data(File, Nev, Mentes);
}