/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta>
#include <fun>
#include <engine>
#include <fakemeta_util>
#include <fvault>

new const PLUGIN[] = "SkinRendszer 1.0.2";
new const VERSION[] = "1.0.3";
new const AUTHOR[] = "Star Régi Nevén Supra:.";

new Pont[33], Csomag[33];//Egyeb
new SuperKnife[33], Kredit[33];//News

new const Prefix[] = "[Prefix]";//Prefix
new const File[] = "SknRendszer";//Mentes
new const Chat[][] = { "say /menu", "say /skin", "say /skinek", "say /pontok" };//Chat Parancsok

new const KreditCsomag[] = "models/emp_skin/kredit.mdl";//News
new const SuperKnifeMdl[] = "models/emp_skin/SuperKnife.mdl"//News

/*
Ujitasok:
1.VipRendszer jelenleg 508 ft ert
2.Kredit Rendszer
3.Kreditert lehet venni SuperKnife-t 340 Sebesseg-el
*/

/*Skin Ut irany*/
new const Fegyverek[][] =
{
	/*rozsdás csomag*/
	"models/emp_skin/rozsdas/v_ak47.mdl",
	"models/emp_skin/rozsdas/v_m4a1.mdl",
	"models/emp_skin/rozsdas/v_awp.mdl",
	"models/emp_skin/rozsdas/v_deagle.mdl",
	
	/*bronz csomag*/
	"models/emp_skin/bronz/v_ak47.mdl",
	"models/emp_skin/bronz/v_m4a1.mdl",
	"models/emp_skin/bronz/v_awp.mdl",
	"models/emp_skin/bronz/v_deagle.mdl",
	
	/*ezust csomag*/
	"models/emp_skin/ezust/v_ak47.mdl",
	"models/emp_skin/ezust/v_m4a1.mdl",
	"models/emp_skin/ezust/v_awp.mdl",
	"models/emp_skin/ezust/v_deagle.mdl",
	
	/*arany csomag*/
	"models/emp_skin/arany/v_ak47.mdl",
	"models/emp_skin/arany/v_m4a1.mdl",
	"models/emp_skin/arany/v_awp.mdl",
	"models/emp_skin/arany/v_deagle.mdl",
	
	/*metal csomag*/
	"models/emp_skin/metal/v_ak47.mdl",
	"models/emp_skin/metal/v_m4a1.mdl",
	"models/emp_skin/metal/v_awp.mdl",
	"models/emp_skin/metal/v_deagle.mdl",
	
	/*Tuz csomag*/
	"models/emp_skin/tuz/v_ak47.mdl",
	"models/emp_skin/tuz/v_m4a1.mdl",
	"models/emp_skin/tuz/v_awp.mdl",
	"models/emp_skin/tuz/v_deagle.mdl",
	
	/*Ultra Csomag*/
	"models/emp_skin/ultra/v_ak47.mdl",
	"models/emp_skin/ultra/v_m4a1.mdl",
	"models/emp_skin/ultra/v_awp.mdl",
	"models/emp_skin/ultra/v_deagle.mdl",
	
	/*Star Csomag*/
	"models/emp_skin/star/v_ak47.mdl",
	"models/emp_skin/star/v_m4a1.mdl",
	"models/emp_skin/star/v_awp.mdl",
	"models/emp_skin/star/v_deagle.mdl",
	
	/*Vip Csomag*/
	"models/emp_skin/vip/v_ak47.mdl",
	"models/emp_skin/vip/v_m4a1.mdl",
	"models/emp_skin/vip/v_awp.mdl",
	"models/emp_skin/vip/v_deagle.mdl"
};

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR);
	
	for(new i;i < sizeof(Chat); i++)
		register_clcmd(Chat[i], "Skinek");//Chat Parancsok
	
	register_clcmd("say /add", "addolas");//Addolas
	register_event("DeathMsg", "Halal", "a");//Halal Event
	register_event("CurWeapon", "FegyverValtas", "be", "1=1");//FegyverValtas Event
	register_forward(FM_Touch,"ForwardTouch" );
}
public addolas(id) 
{
	if(get_user_flags(id) & ADMIN_IMMUNITY)
		Pont[id] += 1500;
}
public plugin_precache()
{
	for(new i;i < sizeof(Fegyverek); i++)
		precache_model(Fegyverek[i]);
	
	precache_model(KreditCsomag);
	precache_model(SuperKnifeMdl);
}
public FegyverValtas(id)
{
	new Gun = get_user_weapon(id);
	
	if(Csomag[id] == 1)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[0]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[1]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[2]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[3]);
	}
	if(Csomag[id] == 2)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[4]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[5]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[6]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[7]);
	}
	if(Csomag[id] == 3)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[8]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[9]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[10]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[11]);
	}
	if(Csomag[id] == 4)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[12]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[13]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[14]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[15]);
	}
	if(Csomag[id] == 5)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[16]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[17]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[18]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[19]);
	}
	if(Csomag[id] == 6)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[20]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[21]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[22]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[23]);
	}
	if(Csomag[id] == 7)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[24]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[25]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[26]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[27]);
	}
	if(Csomag[id] == 8)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[28]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[29]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[30]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[31]);
	}
	
	if(SuperKnife[id] == 1 && Gun == CSW_KNIFE)
	{
		set_user_maxspeed(id, Float:350);
		set_pev(id, pev_viewmodel2, SuperKnifeMdl);
	}
	
	/*Vip Csomag*/
	if(Csomag[id] == 9)
	{
		if(Gun == CSW_AK47) set_pev(id, pev_viewmodel2, Fegyverek[32]);
		if(Gun == CSW_M4A1) set_pev(id, pev_viewmodel2, Fegyverek[33]);
		if(Gun == CSW_AWP) set_pev(id, pev_viewmodel2, Fegyverek[34]);
		if(Gun == CSW_DEAGLE) set_pev(id, pev_viewmodel2, Fegyverek[35]);
	}
}
public Halal()
{
	new x = read_data(1);
	new y = read_data(2);
	
	if(x != y)
	{
		if(read_data(3))
		{
			Pont[x] += 2;
			client_printcolor(x, "!g%s !t» !nFEJLÖVÉS ezért jár !t+2 !nPont.", Prefix);
		}
		else
		{
			Pont[x] ++;
			client_printcolor(x, "!g%s !t» !nEzért jár !t+1 !nPont.", Prefix);
		}
	}
	
	switch(random_num(1, 4))
	{
		case 1:dropdobas();
	}
}
public dropdobas()
{	
	new victim = read_data( 2 );
 
	static Float:origin[ 3 ];
	pev( victim, pev_origin, origin );
 
	new ent = engfunc( EngFunc_CreateNamedEntity, engfunc( EngFunc_AllocString, "info_target" ) );
	origin[ 2 ] -= 36; 
	engfunc( EngFunc_SetOrigin, ent, origin );
 
	if( !pev_valid( ent ) )
	{
		return PLUGIN_HANDLED;
	}
	
	set_pev( ent, pev_classname, "kredit" );
	engfunc( EngFunc_SetModel, ent, KreditCsomag );
	dllfunc( DLLFunc_Spawn, ent );
	set_pev( ent, pev_solid, SOLID_BBOX );
	set_pev( ent, pev_movetype, MOVETYPE_NONE );
	engfunc( EngFunc_SetSize, ent, Float:{ -23.160000, -13.660000, -0.050000 }, Float:{ 11.470000, 12.780000, 6.720000 } );
	engfunc( EngFunc_DropToFloor, ent );
 
	return PLUGIN_HANDLED;
}
public ForwardTouch( ent, id )
{
	if(pev_valid(ent))
	{
	new classname[ 32 ];
	pev( ent, pev_classname, classname, charsmax( classname ) );
 
	if( !equal( classname, "kredit") )
	{
		return FMRES_IGNORED;
	}
	
	new pPont; 
	pPont += random_num(1, 5);
 
	Kredit[id] += pPont;
	client_printcolor(id, "!g%s !t» !nKaptál !g%d !nKredited!", Prefix, pPont);
	
	engfunc( EngFunc_RemoveEntity, ent );
	}
	return FMRES_IGNORED;
}
public logevent_round_start()
{
	new hkt = FM_NULLENT;
	while ( ( hkt = fm_find_ent_by_class( hkt, "kredit") ) )
	{
		engfunc( EngFunc_RemoveEntity, hkt );
	}	
}
public Skinek(id)
{
	new cim[121];
	format(cim, charsmax(cim), "\reMp.# \w| \yFõmenü\r* \dPont: %d \y| \dKredit: %d", Pont[id], Kredit[id]);
	new menu = menu_create(cim, "Skin_h");
	
	menu_additem(menu, "\wAlap Csomag", "0", 0);
	menu_additem(menu, Pont[id] >= 150 ? "\wRozsdás Csomag \r[\wMegszerezve\r]":"\wRozsdás Csomag \r[\w150 Pont\r]", "1", 0);
	menu_additem(menu, Pont[id] >= 300 ? "\wBronz Csomag \r[\wMegszerezve\r]":"\wBronz Csomag \r[\w300 Pont\r]", "2", 0);
	menu_additem(menu, Pont[id] >= 450 ? "\wEzüst Csomag \r[\wMegszerezve\r]":"\wEzüst Csomag \r[\w450 Pont\r]", "3", 0);
	menu_additem(menu, Pont[id] >= 600 ? "\wArany Csomag \r[\wMegszerezve\r]":"\wArany Csomag \r[\w600 Pont\r]", "4", 0);
	menu_additem(menu, Pont[id] >= 750 ? "\wMetal Csomag \r[\wMegszerezve\r]":"\wMetal Csomag \r[\w750 Pont\r]", "5", 0);
	menu_additem(menu, Pont[id] >= 900 ? "\wTúz Csomag \r[\wMegszerezve\r]":"\wTúz Csomag \r[\w900 Pont\r]", "6", 0);
	menu_additem(menu, Pont[id] >= 1050 ? "\wUltra Csomag \r[\wMegszerezve\r]":"\wUltra Csomag \r[\w1050 Pont\r]", "7", 0);
	menu_additem(menu, Pont[id] >= 1200 ? "\wStar Csomag \r[\wMegszerezve\r]":"\wStar Csomag \r[\w1200 Pont\r]", "8", 0);
	menu_additem(menu, Kredit[id] >= 500 ? "\wKnife Skin \r[\wAktiv\r] \r- \d(+ \y340 \dSpeed)":"\wKnife Skin \r[\w500 Kredit\r] ] \r- \d(+ \y340 \dSpeed)", "9", 0);
	menu_additem(menu, get_user_flags(id) & ADMIN_LEVEL_C ? "\wVip Csomag\r[\wAktiv\r]":"\wVip Csomag \r[\w508 ft\r]", "10", 0);
	
	menu_setprop(menu, MPROP_EXIT, MEXIT_ALL);
	menu_setprop(menu, MPROP_BACKNAME, "Vissza");
	menu_setprop(menu, MPROP_NEXTNAME, "Elore");
	menu_setprop(menu, MPROP_EXITNAME, "Kilépés");
	menu_setprop(menu, MPROP_NUMBER_COLOR, "\y");
	menu_display(id, menu, 0);
}
public Skin_h(id, menu, item)
{
	if(item == MENU_EXIT)
	{
		menu_cancel(id);
		return;
	}

	new command[6], name[64], access, callback;
	menu_item_getinfo(menu, item, access, command, sizeof command - 1, name, sizeof name - 1, callback);

	switch(item)
	{
		case 0:
		{
			Csomag[id] = 0;
			SuperKnife[id] = 0;
		}
		case 1: 
		{
			if(Pont[id] >= 150)
			{
				Csomag[id] = 1;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
		}
		case 2: 
		{
			if(Pont[id] >= 300)
			{
				Csomag[id] = 2;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
		}
		case 3: 
		{
			if(Pont[id] >= 450)
			{
				Csomag[id] = 3;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
		}
		case 4: 
		{
			if(Pont[id] >= 600)
			{
				Csomag[id] = 4;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
		}
		case 5: 
		{
			if(Pont[id] >= 750)
			{
				Csomag[id] = 5;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
		}
		case 6: 
		{
			if(Pont[id] >= 900)
			{
				Csomag[id] = 6;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
		}
		case 7: 
		{
			if(Pont[id] >= 1050)
			{
				Csomag[id] = 7;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
		}
		case 8: 
		{
			if(Pont[id] >= 1200)
			{
				Csomag[id] = 8;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég pontod.", Prefix);
		}
		case 9: 
		{
			if(Kredit[id] >= 500)
			{
				SuperKnife[id] = 1;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNincs elég kredited.", Prefix);
		}
		case 10:
		{
			if(get_user_flags(id) & ADMIN_LEVEL_C)
			{
				Csomag[id] = 9;
				client_printcolor(id, "!g%s !t» !nSikeresen Kiválasztodtad.", Prefix);
			}
			else client_printcolor(id, "!g%s !t» !nNem vagy !gVip!n!", Prefix);
		}
	}
}
stock client_printcolor(const id, const input[], any:...)
{
	new count = 1, players[32];
	static msg[191];
	vformat(msg, 190, input, 3);

	replace_all(msg, 190, "!g", "^4");
	replace_all(msg, 190, "!n", "^1");
	replace_all(msg, 190, "!t", "^3");  

	if (id) players[0] = id; else get_players(players, count, "ch");
	{
		for (new i = 0; i < count; i++)
		{
			if (is_user_connected(players[i]))
			{
				message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, players[i]);
				write_byte(players[i]);
				write_string(msg);
				message_end();
			}
		}
	}
	return PLUGIN_HANDLED;
}
public client_putinserver(id)
{
	if(!is_user_bot(id))
		Load(id);
}
public client_disconnect(id)
{
	if(!is_user_bot(id))
	{
		Save(id);
		Pont[id] = 0;
		Csomag[id] = 0;
		Kredit[id] = 0;
	}
}
Load(id)
{
	new Nev[32]; get_user_name(id, Nev, sizeof(Nev)-1);
	
	new Mentes[512];
	format(Mentes, charsmax(Mentes), "%i %i %i", Pont[id], Csomag[id], Kredit[id]);
	
	if(fvault_get_data(File, Nev, Mentes, charsmax(Mentes)))
	{
		new Ol[32], Cso[32], Kre[32];
		parse(Mentes, Ol, 31, Cso, 31, Kre, 31);
		
		Pont[id] = str_to_num(Ol);
		Csomag[id] = str_to_num(Cso);
		Kredit[id] = str_to_num(Kre);
	}
}
Save(id)
{
	new Nev[32]; get_user_name(id, Nev, sizeof(Nev)-1);
	
	new Mentes[512];
	format(Mentes, charsmax(Mentes), "%i %i %i", Pont[id], Csomag[id], Kredit[id]);
	
	fvault_set_data(File, Nev, Mentes);
}
